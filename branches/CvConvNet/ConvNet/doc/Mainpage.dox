/*!
\mainpage ConvNet - C++ library for convolutional neural networks
\section Introduction 

ConvNet is a C++ library implementing data propagation throught convolutional neural networks.

The goal of creating ConvNet is to provide researchers and developers with
an efficient and easy to use C++ implementation of convolutional neural networks.

The library is supposed to be easily compiled both in Linux (gcc) and 
in Windows (MS Visual Studio) natively!

The library is concerned mostly with efficient forward-propagation (fprop) of data through network. The actual training of the networks (bprop) is not emphasized at the moment, since it is usually very researcher-dependent: different researchers prefer to use their own tools to train their networks. 

Training will be implemented later according to [LeCun 98] paper.

\note The library is in a pre-alpha version, hence features will be added extensively.

\section Download
 You are now able to use svn to get the latest sources
\code
$ svn checkout https://conv-net.svn.sourceforge.net/svnroot/conv-net/trunk
\endcode

The binaries for both Linux and Windows will be available later at
 http://www.sourceforge.net/projects/conv-net/

\section Features
- Efficiency.
- Natively compilable and executable both in Linux (gcc) and in Windows (MS VisualStudio).
- Arbitrary network topology. The library can import any possible network configuration. The complete description of the network is provided by a single and easy to read XML-style file. For an example configuration file see \ref sample.xml. 
- OpenCV compatibility. The library is intended to be a contribution to OpenCV project, hence I use OpenCV internal data type like CvMat for matrices and IplImage 
for images. 
- Very permissive \ref LICENSE. The library is posted under BSD-style license, which is much much less restrictive than GPL. It allows many things including proprietary commercial use subject to some minor conditions described in \ref LICENSE.
- Parallel fprop on multiprocessor architectures [to be done]
- Parallel bprop on multiprocessor architectures [to be done]

\section Usage

Whole convolutional network is contained inside one class: \ref CvConvNet.

The class usage is as simple as this
\code
// Create empty net object
CvConvNet net;

// Load the network from XML representation. 
net.fromString(xmlstring);

// Propagate the image through network
// and get the result
int result = (int) net.fprop(img);

cout << "Image is recognized as " << result << endl;
\endcode

For detailed code see samples: \ref testimg.cpp, \ref testmnist.cpp and \ref sample.xml

\section Installation
The only way to use the library at the moment is to compile it yourself from the sources.

Requirements are:
- \b cmake. This is a quite new, but very promising build system.
	A lot of open-source projects are migrating to it from ancient
	autotools, including such monsters as KDE itself!
	For more information, visit http://en.wikipedia.org/wiki/CMake or
	http://www.cmake.org

- \b OpenCV library. This is a famous collection of ComputerVision tools.
	For more information, visit http://en.wikipedia.org/wiki/OpenCV or http://opencvlibrary.sourceforge.net/

- \b expat library. This is the XML parser used when loading a net from XML file.
	It is usually installed on most Linux system by default, so you don't have to do anything. For more information, visit http://en.wikipedia.org/wiki/Expat_%28XML%29 or http://expat.sourceforge.net/

Recommended software for development:
- doxygen. This is a famous C++ documentation tool that automatically creates documentation from comments of source files, almost like javadoc. For more information, visit http://doxygen.sourceforge.net/

All of the required software is available both for Linux and for Windows platforms.

\section Contacts
If you have any questions or suggestions, feel free to contact me at: akhmed.umyarov@stern.nyu.edu

\file LICENSE
\brief The software is released under this BSD-style license

This is a BSD-compatible license as required by Intel OpenCV contribution guide.
\file sample.xml
\brief Sample XML configuration of convolutional network

This is just a sample doing nothing meaningful
*/